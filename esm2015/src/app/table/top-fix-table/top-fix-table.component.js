/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
export class TopFixTableComponent {
    constructor() { }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
TopFixTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-top-fix-table',
                template: "<!-- \u4E0A\u6D4B\u56FA\u5B9A\u8868\u5934 -->\n<div class=\"fix-top-table\" [scrollLeft]=\"myTable.style.scrollLeft\" [ngStyle]=\"myTable.style.topTable\"\n  (keydown)=\"myTable.onKeyDown($event)\" (keyup)=\"myTable.onKeyUp($event)\">\n  <table *ngIf=\"myTable && myTable.$rowNumber[0] && myTable.$colNumber[0]\" class=\"my-table\" cellspacing=\"0\"\n    cellpadding=\"0\" border=\"0\">\n    <thead>\n      <!-- TopThead -->\n      <tr *ngIf=\"myTable.isShowColIndex\">\n        <!-- TopIndexThead -->\n        <th class=\"rowNumber\" tabindex=\"1\" *ngIf=\"myTable.isShowRowIndex\"\n          [ngStyle]=\"{padding:myTable.$rowNumber[0].style.padding,background:myTable.$rowNumber[0].style.background}\">\n          <div\n            [ngStyle]=\"{width:myTable.$rowNumber[0].style.width,height:myTable.$colNumber[0].style.height,lineHeight:myTable.$colNumber[0].style.height}\">\n            {{myTable.isTopLeftShow? myTable.topLeftValue:''}}\n          </div>\n        </th>\n\n        <th class=\"colNumber\" tabindex=\"1\" *ngFor=\"let th of myTable.$colNumber; let i = index\" [ngStyle]=\"th.style\"\n          (mousedown)=\"th.onMouseDown($event)\" (mouseout)=\"th.onMouseOut($event)\" (mousemove)=\"th.onMouseMove($event)\"\n          (click)=\"th.onClick($event)\" (dragover)=\"th.dragOver($event)\" (drop)=\"th.drop($event)\"\n          (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\">\n          <div [ngStyle]=\"th.cell.style\">{{th.cell.content}}</div>\n        </th>\n      </tr>\n      <!-- TopThead -->\n      <tr *ngFor=\"let tr of myTable.$tableHeadTop; let i = index\">\n        <!-- rowIndexTh -->\n        <th *ngIf=\"myTable.isShowRowIndex\" tabindex=\"1\" class=\"rowNumber\" [ngStyle]=\"myTable.$rowNumber[i].style\"\n          (mousedown)=\"myTable.$rowNumber[i].onMouseDown($event)\"\n          (mousemove)=\"myTable.$rowNumber[i].onMouseMove($event)\" (mouseout)=\"myTable.$rowNumber[i].onMouseOut($event)\"\n          (drop)=\"myTable.$rowNumber[i].drop($event)\" (dragenter)=\"myTable.$rowNumber[i].dragEnter($event)\"\n          (dragleave)=\"myTable.$rowNumber[i].dragLeave($event)\" (dragover)=\"myTable.$rowNumber[i].dragOver($event)\">\n\n          <div [ngStyle]=\"myTable.$rowNumber[i].cell.style\">{{myTable.$rowNumber[i].cell.content}}</div>\n        </th>\n        <th class=\"colNumber\" tabindex=\"1\" *ngIf=\"i===0 && myTable.$tableHeadLeft[0] && myTable.$tableHeadTop[0]\"\n          [attr.colspan]=\"myTable.theadLeftEntity.side2\" [attr.rowspan]=\"myTable.$tableHeadTop.length\"\n          [ngStyle]=\"myTable.tableHeadTopLeft.style\">\n          <div [ngStyle]=\"myTable.tableHeadTopLeft.cell.style\">\n          </div>\n        </th>\n        <!-- \u4E0A\u6D4B\u56FA\u5B9A\u8868\u5934 -->\n        <th [ngStyle]=\"th.style\" class=\"top-th\" *ngFor=\"let th of tr; let j = index\" [attr.key]=\"th.id +j\" tabindex=\"1\"\n          (blur)=\"th.onBlur($event)\" (click)=\"th.onClick($event)\" [attr.draggable]=\"th.draggable\"\n          (dragstart)=\"th.dragStart($event)\" (dragend)=\"th.dragEnd($event)\" (dragover)=\"th.dragOver($event)\"\n          (drop)=\"th.drop($event)\" (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\"\n          (mousedown)=\"th.onMouseDown($event)\" (mousemove)=\"th.onMouseMove($event)\" (mouseout)=\"th.onMouseOut($event)\"\n          [attr.colspan]=\"th.span1\" [attr.rowspan]=\"th.span2\">\n          <svg *ngIf=\"th.treeContainer.show\" [ngStyle]=\"th.treeContainer.style\" viewBox=\"0 0 1024 1024\"\n            (click)=\"th.treeContainer.onClick($event)\">\n            <path *ngFor=\"let d of th.treeContainer.svg[th.treeContainer.$openStatus].paths\" [attr.d]=\"d\"></path>\n          </svg>\n          <ng-container *ngFor=\"let sc of th.selfContainers\">\n            <svg [ngStyle]=\"sc.style\" viewBox=\"0 0 1024 1024\" *ngIf=\"sc.show\" (click)=\"sc.onClick($event)\">\n              <path *ngFor=\"let d of sc.svg[sc.type].paths\" [attr.d]=\"d\"></path>\n            </svg>\n          </ng-container>\n          <div (dblclick)=\"th.cell.onDbClick()\" [ngStyle]=\"th.cell.style\"\n            *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'text'\" [attr.title]=\"th.cell.title\">\n            {{th.cell.content}}\n          </div>\n\n          <input *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'input'\" [ngStyle]=\"th.cell.style\"\n            (mouseover)=\"th.cell.onMouseOver($event)\" (blur)=\"th.cell.inputOnBlur($event,true)\"\n            [(ngModel)]=\"th.cell.value\" />\n\n          <button *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'button'\" [ngStyle]=\"th.cell.style\"\n            (click)=\"th.cell.onClick($event)\">{{th.cell.content}}</button>\n\n        </th>\n      </tr>\n    </thead>\n  </table>\n  <app-select-box [myTable]=\"myTable\" positionType=\"top\" *ngIf=\"myTable\"></app-select-box>\n</div>",
                styles: [".main-table{z-index:95}.fix-top-table{overflow:hidden;position:absolute;z-index:100}.index-table{z-index:101!important}.fix-left-table{z-index:100}.fix-top-left-table{position:absolute;z-index:102}.my-table{border:0 solid;border-left:1px solid #dedede;border-spacing:0;float:left!important;table-layout:fixed;width:auto!important}.my-table td,.my-table th{border:1px solid #dedede;border-width:0 1px 1px 0}.my-table tr:first-child td,.my-table tr:first-child th{border-top:1px solid #dedede}.clearfix:after,.clearfix:before{content:\" \";display:table}.clearfix:after{clear:both}"]
            }] }
];
/** @nocollapse */
TopFixTableComponent.ctorParameters = () => [];
TopFixTableComponent.propDecorators = {
    myTable: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    TopFixTableComponent.prototype.myTable;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9wLWZpeC10YWJsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1kcmFnLXRhYmxlLyIsInNvdXJjZXMiOlsic3JjL2FwcC90YWJsZS90b3AtZml4LXRhYmxlL3RvcC1maXgtdGFibGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU96RCxNQUFNO0lBRUosaUJBQWlCOzs7O0lBRWpCLFFBQVE7S0FDUDs7O1lBVkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLHd6SkFBNkM7O2FBRTlDOzs7OztzQkFFRSxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC10b3AtZml4LXRhYmxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvcC1maXgtdGFibGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZTMtZHJhZy10YWJsZS9saWIvZHJhZy10YWJsZS5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBUb3BGaXhUYWJsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIG15VGFibGU6IGFueTtcbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iXX0=