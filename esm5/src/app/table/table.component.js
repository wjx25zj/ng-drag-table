/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
var TableComponent = /** @class */ (function () {
    function TableComponent() {
    }
    /**
     * @return {?}
     */
    TableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    TableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-drag-table',
                    template: "<div>\n  <app-left-fix-table *ngIf=\"myTable.hasLeftFixedTable\" [myTable]=\"myTable\"></app-left-fix-table>\n  <app-top-fix-table *ngIf=\"myTable.hasTopFixedTable\" [myTable]=\"myTable\"></app-top-fix-table>\n  <app-top-left-fix-table *ngIf=\"myTable.hasLeftFixedTable && myTable.hasTopFixedTable\" [myTable]=\"myTable\">\n  </app-top-left-fix-table>\n  <!-- \u4E3B\u8868 -->\n  <div (keydown)=\"myTable.onKeyDown($event)\" (keyup)=\"myTable.onKeyUp($event)\" [ngStyle]=\"myTable.style.mainTable\"\n    [scrollTop]=\"myTable.style.scrollTop\" (scroll)=\"myTable.onScroll($event)\" class=\"main-table\">\n    <table *ngIf=\"myTable && myTable.$rowNumber[0] && myTable.$colNumber[0]\" class=\"my-table\" cellspacing=\"0\"\n      cellpadding=\"0\" border=\"0\">\n\n\n      <!-- TopIndexThead -->\n      <tr *ngIf=\"myTable.isShowColIndex\">\n        <th *ngIf=\"myTable.isShowRowIndex\" class=\"rowNumber\" tabindex=\"1\"\n          [ngStyle]=\"{width:myTable.$rowNumber[0].style.width,height:myTable.$colNumber[0].style.height}\">\n          <div\n            [ngStyle]=\"{width:myTable.$rowNumber[0].style.width,height:myTable.$colNumber[0].style.height,lineHeight:myTable.$colNumber[0].style.height}\">\n            {{myTable.isTopLeftShow? myTable.topLeftValue:''}}\n          </div>\n        </th>\n        <th class=\"colNumber\" *ngFor=\"let th of myTable.$colNumber; let i = index\" (dragover)=\"th.dragOver($event)\"\n          (drop)=\"th.drop($event)\" (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\"\n          (mousedown)=\"th.onMouseDown($event)\" (mousemove)=\"th.onMouseMove($event)\" (mouseout)=\"th.onMouseOut($event)\"\n          [ngStyle]=\"th.style\">\n          <div [ngStyle]=\"th.cell.style\">{{th.cell.content}}</div>\n        </th>\n      </tr>\n\n      <!-- \u7B2C\u4E8C\u884C\u5F00\u59CB -->\n      <tr *ngFor=\"let th of myTable.$rowNumber; let i = index\">\n        <ng-template [ngIf]=\"i < myTable.$tableHeadTop.length\" [ngIfElse]=\"tbody\">\n          <!-- rowIndexTh -->\n          <th *ngIf=\"myTable.isShowRowIndex\" (dragover)=\"th.dragOver($event)\" (drop)=\"th.drop($event)\"\n            (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\" (mousedown)=\"th.onMouseDown($event)\"\n            (mousemove)=\"th.onMouseMove($event)\" (mouseout)=\"th.onMouseOut($event)\" class=\"rowNumber\">\n            <div [ngStyle]=\"th.cell.style\">\n              {{ myTable.hasLeftFixedTable ?'':th.cell.content}}\n            </div>\n          </th>\n          <!-- TopLeft  -->\n          <th class=\"colNumber\" tabindex=\"1\" *ngIf=\"i===0 && myTable.$tableHeadLeft[0] && myTable.$tableHeadTop[0]\"\n            [attr.colspan]=\"myTable.theadLeftEntity.side2\" [attr.rowspan]=\"myTable.theadTopEntity.side2\"\n            [ngStyle]=\"myTable.tableHeadTopLeft.style\">\n            <div [ngStyle]=\"myTable.tableHeadTopLeft.cell.style\">\n            </div>\n          </th>\n          <!-- topTh -->\n          <th *ngFor=\"let th of myTable.$tableHeadTop[i]; let i = index\" [attr.colspan]=\"th.span1\"\n            [attr.rowspan]=\"th.span2\" [ngStyle]=\"th.style\" (click)=\"th.onClick($event)\" [attr.draggable]=\"th.draggable\"\n            (dragstart)=\"th.dragStart($event)\" (dragend)=\"th.dragEnd($event)\" (dragover)=\"th.dragOver($event)\"\n            (drop)=\"th.drop($event)\" (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\"\n            (mousedown)=\"th.onMouseDown($event)\" (mousemove)=\"th.onMouseMove($event)\" (mouseout)=\"th.onMouseOut($event)\"\n            tabindex=\"1\">\n            <svg *ngIf=\"th.treeContainer.show\" [ngStyle]=\"th.treeContainer.style\" viewBox=\"0 0 1024 1024\"\n              (click)=\"th.treeContainer.onClick($event)\">\n              <path *ngFor=\"let d of th.treeContainer.svg[th.treeContainer.$openStatus].paths\" [attr.d]=\"d\"></path>\n            </svg>\n            <ng-container *ngFor=\"let sc of th.selfContainers\">\n              <svg [ngStyle]=\"sc.style\" viewBox=\"0 0 1024 1024\" *ngIf=\"sc.show\" (click)=\"sc.onClick($event)\">\n                <path *ngFor=\"let d of sc.svg[sc.type].paths\" [attr.d]=\"d\"></path>\n              </svg>\n            </ng-container>\n\n            <div [ngStyle]=\"th.cell.style\" (dblclick)=\"th.cell.onDbClick($event)\"\n              *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'text'\" [attr.title]=\"th.cell.title\">\n              {{th.cell.content}}\n            </div>\n            <div *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'input'\">\n              <input [ngStyle]=\"th.cell.style\" (mouseover)=\"th.cell.onMouseOver($event)\"\n                (blur)=\"th.cell.inputOnBlur($event,true)\" [(ngModel)]=\"th.cell.value\" />\n            </div>\n            <div *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'button'\">\n              <button (click)=\"th.cell.onClick($event)\">{{th.cell.content}}</button>\n            </div>\n\n            <select tabindex=\"1\" *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'select'\"\n              [(ngModel)]=\"th.cell.value\" [ngStyle]=\"th.cell.style\" (change)=\"th.cell.onChange($event)\"\n              (blur)=\"th.cell.onBlur($event)\">\n              <option *ngFor=\"let option of th.cell.select.optionList\" [attr.value]=\"option.text\"\n                [attr.key]=\"option.value\">{{option.text}}</option>\n            </select>\n          </th>\n        </ng-template>\n\n        <ng-template #tbody>\n           <!-- rowIndexThead -->\n          <th *ngIf=\"myTable.isShowRowIndex\" class=\"rowNumber\" [ngStyle]=\"th.style\" (mousedown)=\"th.onMouseDown($event)\"\n            (mouseout)=\"th.onMouseOut($event)\" (mousemove)=\"th.onMouseMove($event)\" (drop)=\"th.drop($event)\"\n            (dragenter)=\"th.dragEnter($event)\" (dragleave)=\"th.dragLeave($event)\">\n            <div [ngStyle]=\"th.cell.style\">\n              {{th.cell.content}}\n            </div>\n          </th>\n          <!-- \u4E3B\u8868\u91CC\u5DE6\u4FA7\u8868\u5934 -->\n          <th *ngFor=\"let th of myTable.$tableHeadLeft[i - myTable.$tableHeadTop.length]; let j = index\" tabindex=\"1\" [ngStyle]=\"th.style\" \n            (click)=\"th.onClick($event)\" (blur)=\"th.onBlur($event)\"\n            [attr.draggable]=\"th.draggable\"\n\n            (dragstart)=\"th.dragStart($event)\"\n            (dragover)=\"th.dragOver($event)\"\n            (drop)=\"th.drop($event)\" \n            (dragleave)=\"th.dragLeave($event)\" \n            (dragenter)=\"th.dragEnter($event)\"\n            (dragend)=\"th.dragEnd($event)\"\n\n            (mousedown)=\"th.onMouseDown($event)\" (mousemove)=\"th.onMouseMove($event)\"\n            (mouseout)=\"th.onMouseOut($event)\" [attr.colspan]=\"th.span2\" [attr.rowspan]=\"th.span1\">\n            <svg *ngIf=\"th.treeContainer.show\" [ngStyle]=\"th.treeContainer.style\" viewBox=\"0 0 1024 1024\"\n              (click)=\"th.treeContainer.onClick($event)\">\n              <path *ngFor=\"let d of th.treeContainer.svg[th.treeContainer.$openStatus].paths\" [attr.d]=\"d\"></path>\n            </svg>\n            <ng-container *ngFor=\"let sc of th.selfContainers\">\n              <svg [ngStyle]=\"sc.style\" viewBox=\"0 0 1024 1024\" *ngIf=\"sc.show\" (click)=\"sc.onClick($event)\">\n                <path *ngFor=\"let d of sc.svg[sc.type].paths\" [attr.d]=\"d\"></path>\n              </svg>\n            </ng-container>\n            <div [ngStyle]=\"th.cell.style\" (dblclick)=\"th.cell.onDbClick()\" [attr.title]=\"th.cell.title\"\n              *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'text'\">\n              {{th.cell.content}}\n            </div>\n\n            <input *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'input'\"\n              (mouseover)=\"th.cell.onMouseOver($event)\" (blur)=\"th.cell.inputOnBlur($event,true)\"\n              [(ngModel)]=\"th.cell.value\" [ngStyle]=\"th.cell.style\" style=\"background-color:#fff;\" />\n\n            <button (click)=\"th.cell.onClick($event)\"\n              *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'button'\"\n              [ngStyle]=\"th.cell.style\">{{th.cell.content}}</button>\n\n            <select tabindex=\"1\" *ngIf=\"th.cell.displayClass[th.cell.status].displayType == 'select'\"\n              [(ngModel)]=\"th.cell.value\" [ngStyle]=\"th.cell.style\" (change)=\"th.cell.onChange($event)\"\n              (blur)=\"th.cell.onBlur($event)\">\n              <option *ngFor=\"let option of th.cell.select.optionList\" [attr.value]=\"option.text\"\n                [attr.key]=\"option.value\">{{option.text}}</option>\n            </select>\n          </th>\n          <td *ngFor=\"let td of myTable.$tableBody[i - myTable.$tableHeadTop.length]; let j = index\"  tabindex=\"1\" [ngStyle]=\"td.style\" (click)=\"td.onClick($event)\" (mousedown)=\"td.onMouseDown($event)\"\n            (blur)=\"td.onBlur($event)\" (paste)=\"td.onPaste($event)\" \n            >\n            <div [ngStyle]=\"td.cell.style\" (dblclick)=\"td.cell.onDbClick($event)\"\n              *ngIf=\"td.cell.displayClass[td.cell.status].displayType == 'text'\">{{td.cell.content}}\n            </div>\n\n            <input type=\"text\" (input)=\"td.cell.onInput($event)\" (mouseup)=\"td.cell.onMouseUp($event)\"\n              [ngStyle]=\"td.cell.style\" *ngIf=\"td.cell.displayClass[td.cell.status].displayType == 'input'\"\n              (mouseover)=\"td.cell.onMouseOver($event)\" (focus)=\"td.cell.onFocus($event)\"\n              (blur)=\"td.cell.inputOnBlur($event,true)\" (keydown)=\"td.cell.onKeyDown($event)\"\n              [(ngModel)]=\"td.cell.value\" />\n\n            <select *ngIf=\"td.cell && td.cell.displayClass[td.cell.status].displayType == 'select'\" tabindex=\"1\"\n              [(ngModel)]=\"td.cell.value\" [ngStyle]=\"td.cell.style\" (blur)=\"td.cell.onBlur($event)\"\n              (mouseover)=\"td.cell.onMouseOver($event)\" (change)=\"td.cell.onChange($event)\">\n              <option *ngFor=\"let option of td.cell.select.optionList\" [attr.key]=\"option.value\"\n                [attr.value]=\"option.text\">{{option.text}}</option>\n            </select>\n          </td>\n        </ng-template>\n\n      </tr>\n    </table>\n    <app-select-box [myTable]=\"myTable\" positionType=\"main\" *ngIf=\"myTable\"></app-select-box>\n  </div>\n</div>",
                    styles: [".main-table{z-index:95}.fix-top-table{overflow:hidden;position:absolute;z-index:100}.index-table{z-index:101!important}.fix-left-table{z-index:100}.fix-top-left-table{position:absolute;z-index:102}.my-table{border:0 solid;border-left:1px solid #dedede;border-spacing:0;float:left!important;table-layout:fixed;width:auto!important}.my-table td,.my-table th{border:1px solid #dedede;border-width:0 1px 1px 0}.my-table tr:first-child td,.my-table tr:first-child th{border-top:1px solid #dedede}.clearfix:after,.clearfix:before{content:\" \";display:table}.clearfix:after{clear:both}"]
                }] }
    ];
    /** @nocollapse */
    TableComponent.ctorParameters = function () { return []; };
    TableComponent.propDecorators = {
        myTable: [{ type: Input }]
    };
    return TableComponent;
}());
export { TableComponent };
if (false) {
    /** @type {?} */
    TableComponent.prototype.myTable;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctZHJhZy10YWJsZS8iLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFibGUvdGFibGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUFRdkQ7S0FBaUI7Ozs7SUFFakIsaUNBQVE7OztJQUFSO0tBQ0M7O2dCQVZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsc3NVQUFxQzs7aUJBRXRDOzs7OzswQkFFRSxLQUFLOzt5QkFQUjs7U0FNYSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZy1kcmFnLXRhYmxlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RhYmxlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUzLWRyYWctdGFibGUvbGliL2RyYWctdGFibGUuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgVGFibGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBteVRhYmxlOiBhbnk7XG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cbn1cbiJdfQ==